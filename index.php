<?php
session_start();

// –û–±—Ä–æ–±–∫–∞ –∑–∞–∫—ñ–Ω—á–µ–Ω–Ω—è —á–∞—Å—É
if (isset($_POST['timeout']) && $_SESSION['game_started']) {
    // –ü–æ—Ç–æ—á–Ω–∏–π –≥—Ä–∞–≤–µ—Ü—å –ø—Ä–æ–≥—Ä–∞—î, –ø–µ—Ä–µ–¥–∞—î–º–æ —Ö—ñ–¥ –æ–ø–æ–Ω–µ–Ω—Ç—É
    $current_player = $_SESSION['current_player'];
    $winning_player = ($current_player === 'X') ? 'O' : 'X';
    $_SESSION['current_player'] = $winning_player;
    $has_winner = true;
    $game_over = true;
}

// –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –∞–±–æ –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞–Ω—É –≥—Ä–∏
if (!isset($_SESSION['board']) || !isset($_SESSION['game_started'])) {
    $_SESSION['board'] = array_fill(0, 9, '');
    $_SESSION['current_player'] = 'X';
    $_SESSION['game_mode'] = '';
    $_SESSION['difficulty'] = '';
    $_SESSION['player1_name'] = '';
    $_SESSION['player2_name'] = '';
    $_SESSION['game_started'] = false;
    $_SESSION['symbol_x'] = 'üåü'; // –ü–æ—á–∞—Ç–∫–æ–≤–∏–π —Å–∏–º–≤–æ–ª –¥–ª—è X
    $_SESSION['symbol_o'] = 'üåô'; // –ü–æ—á–∞—Ç–∫–æ–≤–∏–π —Å–∏–º–≤–æ–ª –¥–ª—è O
}

// –û–±—Ä–æ–±–∫–∞ —Ñ–æ—Ä–º–∏ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å –≥—Ä–∏
if (isset($_POST['start'])) {
    $_SESSION['game_started'] = true;
    $_SESSION['board'] = array_fill(0, 9, '');
    $_SESSION['current_player'] = 'X';
    $_SESSION['game_mode'] = $_POST['game_mode'];
    $_SESSION['difficulty'] = $_POST['difficulty'] ?? 'easy';
    $_SESSION['player1_name'] = $_POST['player1_name'];
    $_SESSION['player2_name'] = $_POST['game_mode'] === 'friend' ? $_POST['player2_name'] : '–ö–æ–º–ø\'—é—Ç–µ—Ä';
    $_SESSION['symbol_x'] = $_POST['symbol_x'];
    $_SESSION['symbol_o'] = $_POST['symbol_o'];
}

// –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –≥—Ä–∏ (–∑–±–µ—Ä—ñ–≥–∞—î –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è)
if (isset($_POST['restart'])) {
    $_SESSION['board'] = array_fill(0, 9, '');
    $_SESSION['current_player'] = 'X';
    $_SESSION['game_started'] = true;
}

// –ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –º–µ–Ω—é
if (isset($_POST['menu'])) {
    $_SESSION['game_started'] = false;
    $_SESSION['board'] = array_fill(0, 9, '');
    $_SESSION['current_player'] = 'X';
    $winning_combination = [];
    $has_winner = false;
    $is_draw = false;
    $game_over = false;
} else {
    $winning_combination = [];
}

// –û–±—Ä–æ–±–∫–∞ —Ö–æ–¥—É –≥—Ä–∞–≤—Ü—è
if (isset($_POST['cell']) && $_SESSION['game_started']) {
    $position = (int)$_POST['cell'];
    if ($_SESSION['board'][$position] === '') {
        $_SESSION['board'][$position] = $_SESSION['current_player'];
        
        if (!checkWin() && !checkDraw()) {
            $_SESSION['current_player'] = ($_SESSION['current_player'] === 'X') ? 'O' : 'X';
            
            // –•—ñ–¥ –∫–æ–º–ø'—é—Ç–µ—Ä–∞
            if ($_SESSION['game_mode'] === 'computer' && $_SESSION['current_player'] === 'O') {
                makeComputerMove();
            }
        }
    }
}

// –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ –ø–µ—Ä–µ–º–æ–≥—É
function checkWin($testMode = false) {
    global $winning_combination;
    $patterns = [
        [0, 1, 2], [3, 4, 5], [6, 7, 8],
        [0, 3, 6], [1, 4, 7], [2, 5, 8],
        [0, 4, 8], [2, 4, 6]
    ];
    
    foreach ($patterns as $pattern) {
        if ($_SESSION['board'][$pattern[0]] !== '' &&
            $_SESSION['board'][$pattern[0]] === $_SESSION['board'][$pattern[1]] &&
            $_SESSION['board'][$pattern[1]] === $_SESSION['board'][$pattern[2]]) {
            if (!$testMode) {
                $winning_combination = $pattern;
            }
            return true;
        }
    }
    if (!$testMode) {
        $winning_combination = [];
    }
    return false;
}

// –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ –Ω—ñ—á–∏—é
function checkDraw() {
    return !in_array('', $_SESSION['board']);
}

// –•—ñ–¥ –∫–æ–º–ø'—é—Ç–µ—Ä–∞
function makeComputerMove() {
    $position = -1;
    
    switch ($_SESSION['difficulty']) {
        case 'hard':
            $position = getBestMove();
            break;
        case 'medium':
            $position = (rand(1, 100) <= 70) ? getBestMove() : getRandomMove();
            break;
        default: // easy
            $position = getRandomMove();
    }
    
    if ($position !== -1) {
        $_SESSION['board'][$position] = 'O';
        if (!checkWin()) {
            $_SESSION['current_player'] = 'X';
        }
    }
}

// –í–∏–ø–∞–¥–∫–æ–≤–∏–π —Ö—ñ–¥
function getRandomMove() {
    $empty_cells = [];
    for ($i = 0; $i < 9; $i++) {
        if ($_SESSION['board'][$i] === '') {
            $empty_cells[] = $i;
        }
    }
    return !empty($empty_cells) ? $empty_cells[array_rand($empty_cells)] : -1;
}

// –†–æ–∑—É–º–Ω–∏–π —Ö—ñ–¥
function getBestMove() {
    // –°–ø—Ä–æ–±–∞ –≤–∏–≥—Ä–∞—Ç–∏
    for ($i = 0; $i < 9; $i++) {
        if ($_SESSION['board'][$i] === '') {
            $_SESSION['board'][$i] = 'O';
            if (checkWin(true)) {
                $_SESSION['board'][$i] = '';
                return $i;
            }
            $_SESSION['board'][$i] = '';
        }
    }
    
    // –ë–ª–æ–∫—É–≤–∞–Ω–Ω—è –ø–µ—Ä–µ–º–æ–≥–∏ –≥—Ä–∞–≤—Ü—è
    for ($i = 0; $i < 9; $i++) {
        if ($_SESSION['board'][$i] === '') {
            $_SESSION['board'][$i] = 'X';
            if (checkWin(true)) {
                $_SESSION['board'][$i] = '';
                return $i;
            }
            $_SESSION['board'][$i] = '';
        }
    }
    
    // –¶–µ–Ω—Ç—Ä
    if ($_SESSION['board'][4] === '') {
        return 4;
    }
    
    // –ö—É—Ç–∏
    $corners = [0, 2, 6, 8];
    foreach ($corners as $corner) {
        if ($_SESSION['board'][$corner] === '') {
            return $corner;
        }
    }
    
    return getRandomMove();
}

$has_winner = checkWin();
$is_draw = checkDraw();
$game_over = $has_winner || $is_draw;
?>

<!DOCTYPE html>
<html lang="uk">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>–•—Ä–µ—Å—Ç–∏–∫–∏-–Ω—É–ª–∏–∫–∏ </title>
    <link rel="icon" type="image/png" href="./tic-tac-toe.png">
    <link rel="stylesheet" href="styles.css">
</head>
<body>
    <div class="container">
        <div class="status">
            <?php if ($has_winner): ?>
                <?php 
                    $winner_symbol = $_SESSION['current_player'] === 'X' ? $_SESSION['symbol_x'] : $_SESSION['symbol_o'];
                    echo $_SESSION['current_player'] === 'X' ? $_SESSION['player1_name'] : $_SESSION['player2_name']; 
                ?> –ø–µ—Ä–µ–º—ñ–≥!
            <?php elseif ($is_draw): ?>
                –ù—ñ—á–∏—è!
            <?php elseif ($_SESSION['game_started']): ?>
                –•—ñ–¥: <?php 
                    $current_symbol = $_SESSION['current_player'] === 'X' ? $_SESSION['symbol_x'] : $_SESSION['symbol_o'];
                    $current_name = $_SESSION['current_player'] === 'X' ? $_SESSION['player1_name'] : $_SESSION['player2_name'];
                    echo "$current_name ($current_symbol)";
                ?>
            <?php endif; ?>
        </div>

<div class="board">
            <?php for($i = 0; $i < 9; $i++): ?>
                <form method="post" style="display: contents;">
<button type="submit" 
        name="cell" 
        value="<?php echo $i; ?>" 
        class="cell <?php echo in_array($i, $winning_combination) ? 'winning' : 
                       (!empty($winning_combination) ? 'dimmed' : ''); ?>"
        onclick="return submitMove(this);"
        <?php echo !$_SESSION['game_started'] || $game_over || $_SESSION['board'][$i] !== '' ? 'disabled' : ''; ?>>

                        <?php 
                            if ($_SESSION['board'][$i] === 'X') {
                                echo $_SESSION['symbol_x'];
                            } elseif ($_SESSION['board'][$i] === 'O') {
                                echo $_SESSION['symbol_o'];
                            }
                        ?>
                    </button>
                </form>
            <?php endfor; ?>
        </div>
    </div>

    <!-- –ú–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å -->
    <?php if (!$_SESSION['game_started']): ?>
    <div class="modal">
        <div class="modal-content">
            <h2>–ù–æ–≤–∞ –º–∞–≥—ñ—á–Ω–∞ –≥—Ä–∞ ‚ú®</h2>
            <form method="post">
                <select name="game_mode" id="game-mode" onchange="togglePlayer2Input(this.value)">
                    <option value="computer">–ì—Ä–∞ –∑ –∫–æ–º–ø'—é—Ç–µ—Ä–æ–º</option>
                    <option value="friend">–ì—Ä–∞ –∑ –¥—Ä—É–≥–æ–º</option>
                </select>
                
                <div id="difficulty-section">
                    <select name="difficulty">
                        <option value="easy">–õ–µ–≥–∫–∏–π —Ä—ñ–≤–µ–Ω—å</option>
                        <option value="medium">–°–µ—Ä–µ–¥–Ω—ñ–π —Ä—ñ–≤–µ–Ω—å</option>
                        <option value="hard">–°–∫–ª–∞–¥–Ω–∏–π —Ä—ñ–≤–µ–Ω—å</option>
                    </select>
                </div>

                <input type="text" name="player1_name" placeholder="–Ü–º'—è –ø–µ—Ä—à–æ–≥–æ –≥—Ä–∞–≤—Ü—è" required>
                <input type="text" name="player2_name" id="player2-input" placeholder="–Ü–º'—è –¥—Ä—É–≥–æ–≥–æ –≥—Ä–∞–≤—Ü—è" style="display: none;">
                
                <!-- –î–æ–¥–∞—î–º–æ –≤–∏–±—ñ—Ä —Å–∏–º–≤–æ–ª—ñ–≤ -->
                <select name="symbol_x" class="symbol-select">
                    <option value="üåü">üåü –ó—ñ—Ä–∫–∞</option>
                    <option value="üåû">üåû –°–æ–Ω—Ü–µ</option>
                    <option value="ü¶Å">ü¶Å –õ–µ–≤</option>
                    <option value="üåà">üåà –í–µ—Å–µ–ª–∫–∞</option>
                    <option value="‚≠ê">‚≠ê –ó—ñ—Ä–æ—á–∫–∞</option>
                    <option value="üéÆ">üéÆ –ì–µ–π–º–ø–∞–¥</option>
                    <option value="‚ùå">‚ùå –•—Ä–µ—Å—Ç–∏–∫</option>
                </select>

                <select name="symbol_o" class="symbol-select">
                    <option value="üåô">üåô –ú—ñ—Å—è—Ü—å</option>
                    <option value="üåö">üåö –¢–µ–º–Ω–∏–π –º—ñ—Å—è—Ü—å</option>
                    <option value="üêØ">üêØ –¢–∏–≥—Ä</option>
                    <option value="üå∫">üå∫ –ö–≤—ñ—Ç–∫–∞</option>
                    <option value="üí´">üí´ –ó—ñ—Ä–∫–∏</option>
                    <option value="üé≤">üé≤ –ö—É–±–∏–∫</option>
                    <option value="‚≠ï">‚≠ï –ù—É–ª–∏–∫</option>
                </select>
                
                <button type="submit" name="start" class="button">–ü–æ—á–∞—Ç–∏ –≥—Ä—É</button>
            </form>
        </div>
    </div>
    <?php endif; ?>

    <!-- –ú–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É -->
    <?php if ($game_over): ?>
    <div class="modal">
        <div class="modal-content">
            <h2>
                <?php if ($has_winner): ?>
                    <?php 
                        $winner_symbol = $_SESSION['current_player'] === 'X' ? $_SESSION['symbol_x'] : $_SESSION['symbol_o'];
                        echo $_SESSION['current_player'] === 'X' ? $_SESSION['player1_name'] : $_SESSION['player2_name']; 
                        echo " ($winner_symbol) –ø–µ—Ä–µ–º—ñ–≥!";
                    ?>
                <?php else: ?>
                    –ù—ñ—á–∏—è! ü§ù
                <?php endif; ?>
            </h2>
            <form method="post" style="display: inline;">
                <button type="submit" name="restart" class="button">–ù–æ–≤–∞ –≥—Ä–∞</button>
                <button type="submit" name="menu" class="button">–ú–µ–Ω—é</button>
            </form>
        </div>
    </div>
    <?php endif; ?>

<script>

    // –î–æ–¥–∞—î–º–æ –∑–∞—Ç—Ä–∏–º–∫—É –¥–ª—è —Ö–æ–¥—É –∫–æ–º–ø'—é—Ç–µ—Ä–∞
    async function submitMove(button) {
        const isComputerGame = <?php echo json_encode($_SESSION['game_mode'] === 'computer'); ?>;
        const isPlayerX = <?php echo json_encode($_SESSION['current_player'] === 'X'); ?>;
        
        // –°–∫–∏–¥–∞—î–º–æ —Ç–∞–π–º–µ—Ä –ø—Ä–∏ –∫–æ–∂–Ω–æ–º—É —Ö–æ–¥—ñ
        if (timerId) clearInterval(timerId);
        startTimer();
        
        if (isComputerGame && isPlayerX) {
            // –ë–ª–æ–∫—É—î–º–æ –≤—Å—ñ –∫–ª—ñ—Ç–∏–Ω–∫–∏ –Ω–∞ —á–∞—Å —Ö–æ–¥—É –∫–æ–º–ø'—é—Ç–µ—Ä–∞
            const cells = document.querySelectorAll('.cell:not([disabled])');
            cells.forEach(cell => cell.disabled = true);
            
            // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ —Ñ–æ—Ä–º—É –∑ –∑–∞—Ç—Ä–∏–º–∫–æ—é –¥–ª—è –∫–æ–º–ø'—é—Ç–µ—Ä–∞
            setTimeout(() => {
                button.form.submit();
            }, 500);
            return false;
        }
        
        button.form.submit();
        return false;
    }

    function togglePlayer2Input(mode) {
        const player2Input = document.getElementById('player2-input');
        const difficultySection = document.getElementById('difficulty-section');
        
        if (mode === 'friend') {
            player2Input.style.display = 'block';
            player2Input.required = true;
            difficultySection.style.display = 'none';
        } else {
            player2Input.style.display = 'none';
            player2Input.required = false;
            difficultySection.style.display = 'block';
        }
    }
</script>
</body>
</html>